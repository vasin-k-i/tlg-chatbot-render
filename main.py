import logging
from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, filters, ContextTypes

# –õ–æ–≥–≥–µ—Ä
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if not update.message:
        return

    user = update.message.from_user
    chat = update.message.chat

    logger.info(f"üí¨ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    logger.info(f"–ò–º—è: {user.first_name}")
    logger.info(f"–§–∞–º–∏–ª–∏—è: {user.last_name}")
    logger.info(f"Username: {user.username}")
    logger.info(f"User ID: {user.id}")
    logger.info(f"Chat Title: {chat.title}")
    logger.info(f"Chat ID: {chat.id}")
    logger.info(f"–¢–µ–∫—Å—Ç: {update.message.text}")

    await update.message.reply_text(
        f"–í–∞—à user ID: {user.id}\nChat ID: {chat.id}"
    )

def main():
    import os

    TELEGRAM_TOKEN = os.environ['TELEGRAM_TOKEN']
    app = ApplicationBuilder().token(TELEGRAM_TOKEN).build()

    app.add_handler(MessageHandler(filters.TEXT & (~filters.COMMAND), handle_message))

    logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    app.run_polling()

if __name__ == "__main__":
    main()
